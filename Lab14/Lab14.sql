/* Dung Luong
Lab14
*/

--------------------------------------------1
SET SERVEROUTPUT ON;
DECLARE 
    CURSOR INVOICES_CURSOR IS
        SELECT VENDOR_NAME, INVOICE_NUMBER, INVOICE_TOTAL - PAYMENT_TOTAL - CREDIT_TOTAL AS BALANCE_DUE
        FROM AP.VENDORS V JOIN AP.INVOICES I
        ON V.VENDOR_ID = I.VENDOR_ID
        WHERE INVOICE_TOTAL - PAYMENT_TOTAL - CREDIT_TOTAL >= 5000
        ORDER BY BALANCE_DUE;
        
    INVOICE_ROW AP.INVOICES%ROWTYPE;
BEGIN
    FOR INVOICE_ROW IN INVOICES_CURSOR LOOP
        DBMS_OUTPUT.PUT_LINE(TO_CHAR(INVOICE_ROW.BALANCE_DUE,'$99,999.99') || '     ' || INVOICE_ROW.INVOICE_NUMBER || '     ' || INVOICE_ROW.VENDOR_NAME);
    END LOOP;
END;/
        
---------------------------------------------------------2
VARIABLE BALANCE_AMOUNT_VALUE NUMBER; 

BEGIN
    :BALANCE_AMOUNT_VALUE := &BALANCE_DUE;
END;
/
 
DECLARE 
    CURSOR INVOICES_CURSOR IS
        SELECT VENDOR_NAME, INVOICE_NUMBER, INVOICE_TOTAL - PAYMENT_TOTAL - CREDIT_TOTAL AS BALANCE_DUE
        FROM AP.VENDORS V JOIN AP.INVOICES I
        ON V.VENDOR_ID = I.VENDOR_ID
        WHERE BALANCE_DUE = :BALANCE_AMOUNT_VALUE;
                
    INVOICE_ROW AP.INVOICES%ROWTYPE;
BEGIN
    FOR INVOICE_ROW IN INVOICES_CURSOR LOOP
        DBMS_OUTPUT.PUT_LINE(TO_CHAR(INVOICE_ROW.BALANCE_DUE,'$99,999.99') || '     ' || INVOICE_ROW.INVOICE_NUMBER || '     ' || INVOICE_ROW.VENDOR_NAME);
    END LOOP;
END;
 /
 
BEGIN
    DBMS_OUTPUT.PUT_LINE('Invoices amounts greater than or equal to $2,000 '  ||  :BALANCE_AMOUNT_VALUE);
END;
/
        
    
        